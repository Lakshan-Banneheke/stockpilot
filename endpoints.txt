Follow the following points to configure the front end to listen

Add the below script to the listening page, backend will comtinuously feed the required data and can retrieve the data from e.data

 <script>
    var eventSource = new EventSource("http://localhost:5000/binance/listen/BNBBTC")
    
    eventSource.addEventListener("message", function(e) {
      var div = document.getElementById('counter');
      div.innerHTML += e.data;
    }, false)

  </script>


############################################################### Listening Endpoints

Listening endpoints are available in the binanceStream __init__ file

To add endpoints to listening do the following things,

> Add a stream connection to getStreamData __init__ file start the twm
> In pubsub.data_center create a new announcer instance and add to the dictionery
> Extend the listen_socket() logic

localhost:5000/binance/listen/BNBBTC      # Listen the BNBBTC Stream
localhost:5000/binance/listen/BNBUSDT     # Listen the BNBUSDT Stream

############################################################### Listening Endpoints Ends

############################################################### Watch List Endpoints

To access the watch list of a user use the following end points

> Create a new watch list with one or more brands or add brands to the existing watch list 

  [POST]  localhost:5000/wlist/addBrand

  in the request body pass the following json

  {
      "email":"lakshan@gmail.com",
      "brands":["BNBBTC","BNBUSDT"]
  }

> To get the brand names in an existing watch list use the following endpoints

  [GET] localhost:5000/wlist/viewWlist/email_of_the_relevent_user


> To remove brands from the relevent watch list

  [DELETE]  localhost:5000/wlist/removeBrand/

  pass the following as a json in the request body

  {
    "email":"user@gmail.com",
    "brands":["brand01","brand02"]
  }


############################################################### Watch List Endpoints Ends



